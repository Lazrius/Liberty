#include <Dump.h>

_extern _naked void sub_52CFD0() // _sub_52CFD0
{
    __DEBUG_ASM(52CFD0);
    // chunk 0x52CFD0 _sub_52CFD0
    asm("loc_52CFD0: sub $0x58,%esp;");
    asm("loc_52CFD3: push %ebx;");
    asm("loc_52CFD4: push %ebp;");
    asm("loc_52CFD5: mov %ecx,%ebx;");
    asm("loc_52CFD7: mov 4(%ebx),%ecx;");
    asm("loc_52CFDA: push %esi;");
    asm("loc_52CFDB: xor %ebp,%ebp;");
    asm("loc_52CFDD: test %ecx,%ecx;");
    asm("loc_52CFDF: push %edi;");
    asm("loc_52CFE0: je loc_52CFEC;");
    asm("loc_52CFE2: mov 0xC(%ecx),%eax;");
    asm("loc_52CFE5: test %eax,%eax;");
    asm("loc_52CFE7: je loc_52CFEC;");
    asm("loc_52CFE9: mov 4(%eax),%ebp;");
    asm("loc_52CFEC: push $0;");
    asm("loc_52CFEE: lea 0x18(%esp),%eax;");
    asm("loc_52CFF2: push %eax;");
    asm("loc_52CFF3: calll *_import_5C68B8;");
    asm("loc_52CFF9: mov 4(%ebx),%ecx;");
    asm("loc_52CFFC: test %ecx,%ecx;");
    asm("loc_52CFFE: je loc_52D271;");
    asm("loc_52D004: mov (%ecx),%edx;");
    asm("loc_52D006: calll *8(%edx);");
    asm("loc_52D009: test %al,%al;");
    asm("loc_52D00B: jne loc_52D271;");
    asm("loc_52D011: mov 0x10(%ebx),%ecx;");
    asm("loc_52D014: cmp $0xFFFFFFFF,%ecx;");
    asm("loc_52D017: je loc_52D04B;");
    asm("loc_52D019: mov _import_5C6D40,%eax;");
    asm("loc_52D01E: mov (%eax),%eax;");
    asm("loc_52D020: mov (%eax),%edx;");
    asm("loc_52D022: push $0;");
    asm("loc_52D024: push $0x3F800000;");
    asm("loc_52D029: push $0x3F800000;");
    asm("loc_52D02E: push $0;");
    asm("loc_52D030: push $0x3F800000;");
    asm("loc_52D035: push $0;");
    asm("loc_52D037: push $0;");
    asm("loc_52D039: push %ecx;");
    asm("loc_52D03A: push %eax;");
    asm("loc_52D03B: calll *0x2C(%edx);");
    asm("loc_52D03E: mov 0x10(%ebx),%eax;");
    asm("loc_52D041: push %eax;");
    asm("loc_52D042: calll *_import_5C68B4;");
    asm("loc_52D048: add $4,%esp;");
    asm("loc_52D04B: call _sub_54BC80;");
    asm("loc_52D050: test %al,%al;");

    // 0F 84 49 01 00 00 -> 90 90 90 90 90 90	freelancer.exe	12D052	w0dk4	Activate [gun] light_anim entries (Part 2).
    //asm("loc_52D052: je loc_52D1A1;");
    // just nuking instead of nops

    asm("loc_52D058: call _sub_54BAF0;");
    asm("loc_52D05D: test %eax,%eax;");
    asm("loc_52D05F: je loc_52D080;");
    asm("loc_52D061: add $0xC,%eax;");
    asm("loc_52D064: test %eax,%eax;");
    asm("loc_52D066: je loc_52D080;");
    asm("loc_52D068: mov 4(%eax),%eax;");
    asm("loc_52D06B: test %eax,%eax;");
    asm("loc_52D06D: je loc_52D080;");
    asm("loc_52D06F: mov 0x4C(%eax),%ecx;");
    asm("loc_52D072: and $0x503,%ecx;");
    asm("loc_52D078: cmp $0x503,%ecx;");
    asm("loc_52D07E: je loc_52D082;");
    asm("loc_52D080: xor %eax,%eax;");
    asm("loc_52D082: mov 4(%ebx),%edx;");
    asm("loc_52D085: cmp 4(%edx),%eax;");
    asm("loc_52D088: jne loc_52D1A1;");
    asm("loc_52D08E: mov 0x5C(%ebp),%eax;");
    asm("loc_52D091: test %eax,%eax;");
    asm("loc_52D093: je loc_52D271;");
    asm("loc_52D099: lea 0x60(%ebp),%esi;");
    asm("loc_52D09C: push %esi;");
    asm("loc_52D09D: call _sub_538E80;");
    asm("loc_52D0A2: mov %eax,%edi;");
    asm("loc_52D0A4: add $4,%esp;");
    asm("loc_52D0A7: test %edi,%edi;");
    asm("loc_52D0A9: je loc_52D178;");
    asm("loc_52D0AF: mov 0x14(%esp),%eax;");
    asm("loc_52D0B3: mov 0x18(%esp),%ecx;");
    asm("loc_52D0B7: mov 0x1C(%esp),%edx;");
    asm("loc_52D0BB: mov %eax,0x20(%esp);");
    asm("loc_52D0BF: mov $0xFF,%al;");
    asm("loc_52D0C1: mov %al,0x10(%esp);");
    asm("loc_52D0C5: mov %al,0x11(%esp);");
    asm("loc_52D0C9: mov %al,0x12(%esp);");
    asm("loc_52D0CD: mov %al,0x13(%esp);");
    asm("loc_52D0D1: mov 0x58(%ebp),%eax;");
    asm("loc_52D0D4: mov %ecx,0x24(%esp);");
    asm("loc_52D0D8: push %eax;");
    asm("loc_52D0D9: lea 0x14(%esp),%ecx;");
    asm("loc_52D0DD: mov %edx,0x2C(%esp);");
    asm("loc_52D0E1: push %ecx;");
    asm("loc_52D0E2: lea 0x28(%esp),%edx;");
    asm("loc_52D0E6: push %edx;");
    asm("loc_52D0E7: call _sub_537AF0;");
    asm("loc_52D0EC: mov %eax,%esi;");
    asm("loc_52D0EE: add $0xC,%esp;");
    asm("loc_52D0F1: test %esi,%esi;");
    asm("loc_52D0F3: je loc_52D140;");

    // 5B -> 53	freelancer.exe	12D0F6	w0dk4	Activate [gun] light_anim entries (Part 3).
    //asm("loc_52D0F5: mov 8(%ebx),%ebx;");
    asm("loc_52D0F5: mov 8(%ebx),%edx;");

    // 03 -> 02	freelancer.exe	12D0F9	w0dk4	Activate [gun] light_anim entries (Part 4).
    //asm("loc_52D0F8: mov (%ebx),%eax;");
    asm("loc_52D0F8: mov (%edx),%eax;");

    asm("loc_52D0FA: lea 0x2C(%esp),%ecx;");
    asm("loc_52D0FE: push %ecx;");

    // CB -> CA	freelancer.exe	12D100	w0dk4	Activate [gun] light_anim entries (Part 5).
    //asm("loc_52D0FF: mov %ebx,%ecx;");
    asm("loc_52D0FF: mov %edx,%ecx;");

    asm("loc_52D101: calll *4(%eax);");
    asm("loc_52D104: push %eax;");
    asm("loc_52D105: mov %esi,%ecx;");
    asm("loc_52D107: call _sub_5377A0;");
    asm("loc_52D10C: push $0;");
    asm("loc_52D10E: push $0x3F800000;");
    asm("loc_52D113: push $0x3F800000;");
    asm("loc_52D118: push %edi;");
    asm("loc_52D119: mov %esi,%ecx;");
    asm("loc_52D11B: call _sub_537960;");
    asm("loc_52D120: test %al,%al;");
    asm("loc_52D122: jne loc_52D12B;");
    asm("loc_52D124: mov (%esi),%edx;");
    asm("loc_52D126: mov %esi,%ecx;");
    asm("loc_52D128: calll *8(%edx);");
    asm("loc_52D12B: mov %esi,%ecx;");
    asm("loc_52D12D: call _sub_537AD0;");

    // 5F 5E -> EB 6D	freelancer.exe	12D132	w0dk4	Activate [gun] light_anim entries (Part 1).
    //asm("loc_52D132: pop %edi;");
    asm("loc_52D132: jmp loc_52D1A1");

    asm("loc_52D133: pop %esi;");
    asm("loc_52D134: pop %ebp;");
    asm("loc_52D135: pop %ebx;");
    asm("loc_52D136: add $0x58,%esp;");
    asm("loc_52D139: ret;");
    asm("loc_52D13A: lea (%ebx),%ebx;");
    asm("loc_52D140: mov 4(%ebx),%eax;");
    asm("loc_52D143: mov 0xC(%eax),%eax;");
    asm("loc_52D146: lea 8(%eax),%ecx;");
    asm("loc_52D149: mov $0x100002,%esi;");
    asm("loc_52D14E: calll *_import_5C6044;");
    asm("loc_52D154: mov _import_5C6D18,%ecx;");
    asm("loc_52D15A: push %eax;");
    asm("loc_52D15B: push $0x13B;");
    asm("loc_52D160: push $_data_5DD484;");
    asm("loc_52D165: push $_data_5DD520;");
    asm("loc_52D16A: push %esi;");
    asm("loc_52D16B: calll *(%ecx);");
    asm("loc_52D16D: add $0x14,%esp;");
    asm("loc_52D170: pop %edi;");
    asm("loc_52D171: pop %esi;");
    asm("loc_52D172: pop %ebp;");
    asm("loc_52D173: pop %ebx;");
    asm("loc_52D174: add $0x58,%esp;");
    asm("loc_52D177: ret;");
    asm("loc_52D178: mov _import_5C6D18,%edx;");
    asm("loc_52D17E: push %esi;");
    asm("loc_52D17F: push $0x140;");
    asm("loc_52D184: push $_data_5DD484;");
    asm("loc_52D189: mov $0x100002,%eax;");
    asm("loc_52D18E: push $_data_5DD4E4;");
    asm("loc_52D193: push %eax;");
    asm("loc_52D194: calll *(%edx);");
    asm("loc_52D196: add $0x14,%esp;");
    asm("loc_52D199: pop %edi;");
    asm("loc_52D19A: pop %esi;");
    asm("loc_52D19B: pop %ebp;");
    asm("loc_52D19C: pop %ebx;");
    asm("loc_52D19D: add $0x58,%esp;");
    asm("loc_52D1A0: ret;");
    asm("loc_52D1A1: lea 0x54(%ebp),%esi;");
    asm("loc_52D1A4: mov %esi,%ecx;");
    asm("loc_52D1A6: calll *_import_5C6040;");
    asm("loc_52D1AC: test %al,%al;");
    asm("loc_52D1AE: jne loc_52D271;");
    asm("loc_52D1B4: mov 0x28(%ebx),%ecx;");
    asm("loc_52D1B7: test %ecx,%ecx;");
    asm("loc_52D1B9: je loc_52D1D7;");
    asm("loc_52D1BB: call _sub_4F8110;");
    asm("loc_52D1C0: mov 0x28(%ebx),%ecx;");
    asm("loc_52D1C3: mov (%ecx),%eax;");
    asm("loc_52D1C5: calll *4(%eax);");
    asm("loc_52D1C8: mov 0x28(%ebx),%ecx;");
    asm("loc_52D1CB: call _sub_4F7A90;");
    asm("loc_52D1D0: movl $0,0x28(%ebx);");
    asm("loc_52D1D7: mov 4(%ebx),%ecx;");
    asm("loc_52D1DA: push $0;");
    asm("loc_52D1DC: calll *_import_5C68B0;");
    asm("loc_52D1E2: mov %eax,%ebp;");
    asm("loc_52D1E4: cmpl $0xFFFFFFFF,(%ebp);");
    asm("loc_52D1E8: je loc_52D271;");
    asm("loc_52D1EE: push %esi;");
    asm("loc_52D1EF: call _sub_40F080;");
    asm("loc_52D1F4: push $0x84;");
    asm("loc_52D1F9: mov %eax,0x18(%esp);");
    asm("loc_52D1FD: call _sub_4F79A0;");
    asm("loc_52D202: add $8,%esp;");
    asm("loc_52D205: test %eax,%eax;");
    asm("loc_52D207: je loc_52D214;");
    asm("loc_52D209: push $0;");
    asm("loc_52D20B: mov %eax,%ecx;");
    asm("loc_52D20D: call _sub_4F8060;");
    asm("loc_52D212: jmp loc_52D216;");
    asm("loc_52D214: xor %eax,%eax;");
    asm("loc_52D216: mov %eax,0x28(%ebx);");
    asm("loc_52D219: lea 4(%ebp),%esi;");
    asm("loc_52D21C: mov $9,%ecx;");
    asm("loc_52D221: lea 0x38(%esp),%edi;");
    asm("loc_52D225: rep movsl (%esi),(%edi);");
    asm("loc_52D227: lea 0x28(%ebp),%ecx;");
    asm("loc_52D22A: mov (%ecx),%edx;");
    asm("loc_52D22C: mov %edx,0x5C(%esp);");
    asm("loc_52D230: mov 4(%ecx),%edx;");
    asm("loc_52D233: mov 8(%ecx),%ecx;");
    asm("loc_52D236: mov %edx,0x60(%esp);");
    asm("loc_52D23A: mov %ecx,0x64(%esp);");
    asm("loc_52D23E: mov (%ebp),%ecx;");
    asm("loc_52D241: lea 0x38(%esp),%edx;");
    asm("loc_52D245: push %edx;");
    asm("loc_52D246: mov 8(%ebx),%edx;");
    asm("loc_52D249: push %ecx;");
    asm("loc_52D24A: push %edx;");
    asm("loc_52D24B: mov %eax,%ecx;");
    asm("loc_52D24D: call _sub_4F7D20;");
    asm("loc_52D252: mov 0x28(%ebx),%ecx;");
    asm("loc_52D255: mov 0x10(%esp),%edx;");
    asm("loc_52D259: mov (%ecx),%eax;");
    asm("loc_52D25B: push %edx;");
    asm("loc_52D25C: calll *(%eax);");
    asm("loc_52D25E: test %al,%al;");
    asm("loc_52D260: jne loc_52D271;");
    asm("loc_52D262: mov 0x28(%ebx),%ecx;");
    asm("loc_52D265: call _sub_4F7A90;");
    asm("loc_52D26A: movl $0,0x28(%ebx);");
    asm("loc_52D271: pop %edi;");
    asm("loc_52D272: pop %esi;");
    asm("loc_52D273: pop %ebp;");
    asm("loc_52D274: pop %ebx;");
    asm("loc_52D275: add $0x58,%esp;");
    asm("loc_52D278: ret;");
    asm("int3;"); // unreachable
}
